{"version":3,"sources":["AIKeys/Dropdown/Dropdown.js","AIKeys/Dropdown/useDetectOutsideClick.js","AIKeys/Letter/Letter.js","AIKeys/LetterGrid/LetterGrid.js","App.js","reportWebVitals.js","index.js"],"names":["DropdownMenu","props","dropdownRef","useRef","el","initialState","useState","isActive","setIsActive","useEffect","pageClickEvent","e","current","contains","target","window","addEventListener","removeEventListener","useDetectOutsideClick","currentLabel","setLabel","reactToDropdownClick","label","onClickButton","className","onClick","ref","Letter","isCurrent","id","currIndex","isPrev","extraClassName","isCorrect","text","LetterGrid","textExists","undefined","getMessage","status","currKey","keyIndex","Array","from","data","message","map","char","index","entry","items","App","texts","setTexts","setKeyIndex","keys","setItems","score","setScore","lang","setLang","time","setTimer","speed","setSpeed","length","fetchText","resetState","setInterval","t","speedNow","Math","round","Infinity","downHandler","key","splice","addItem","prevVal","console","log","url","axios","get","then","response","catch","error","l","switchLang","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d38668f.chunk.js","sourcesContent":["import React, { useState , useEffect, useRef} from \"react\";\nimport './Dropdown.css';\nimport {useDetectOutsideClick} from \"./useDetectOutsideClick.js\"\n\nfunction DropdownMenu(props) {\n    const dropdownRef = useRef(null);\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\n    const [currentLabel, setLabel] = useState(\"python\");\n    const onClick = () => setIsActive(!isActive);\n\n\n    const reactToDropdownClick = (label) => {\n        setIsActive(!isActive);\n        setLabel(label);\n        props.onClickButton(label)\n      };\n  \n    return (\n        <div className=\"menu-container\">\n        <button onClick={onClick} className=\"menu-trigger\">\n          <span>{currentLabel}</span>\n        </button>\n        <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n            <ul>\n                <li><p onClick={() => reactToDropdownClick(\"python\")}>python</p></li>\n                <li><p onClick={() => reactToDropdownClick(\"swift\")}>swift</p></li>\n            </ul>\n        </nav>\n      </div>\n    );\n  };\n\n  export default DropdownMenu;\n\n  // <li><p onClick={() => reactToDropdownClick(\"swift\")}>swift</p></li>","import { useState, useEffect } from 'react';\n\nexport const useDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    // If the item is active (ie open) then listen for clicks\n    if (isActive) {\n      window.addEventListener('click', pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener('click', pageClickEvent);\n    }\n\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n}","import React, { useState } from \"react\";\n\nimport './Letter.css';\n\nfunction Letter(props) {\n\n    // {index < keyIndex ? items[index] : \"\"}\n    const isCurrent = props.id === props.currIndex\n    const isPrev = props.id < props.currIndex\n    const extraClassName = isCurrent ?  \"letter-blink\" : isPrev  ? (props.isCorrect ?  'letter-correct' : 'letter-notcorrect' ) : \"\"\n\n    return (\n        <span \n        id = {props.id}\n        className={`letter ${extraClassName}`}>{props.text}\n        </span>\n      );\n  }\n\n  export default Letter;","import React, { useState } from \"react\";\nimport Letter from \"../Letter/Letter.js\"\nimport './LetterGrid.css';\n\nfunction LetterGrid(props) {\n\n    const textExists = props.getMessage !== undefined && props.getMessage.status === 200\n    const currKey = props.keyIndex\n\n    return (\n        <div> {\n            textExists?  \n            <div className=\"center grid\"> {\n              Array.from(props.getMessage.data.message).map((char, index) => {\n                const entry = index < currKey ? props.items[index] : \"\"\n                const isCorrect = entry === char\n                return (\n                  <Letter\n                  key = {index}\n                  id = {index}\n                  text = {char}\n                  isCorrect = {isCorrect}\n                  entry = {entry}\n                  currIndex = {currKey}\n                  ></Letter>\n                )\n              })\n            }</div>\n            :\n            <div className=\"loading center\"><h1>Loading</h1></div>\n            }  \n        </div> \n    )\n\n}\n\n <div className=\"loading center\"><h1>Loading</h1></div>\nexport default LetterGrid;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport Dropdown from \"./AIKeys/Dropdown/Dropdown.js\"\nimport LetterGrid from \"./AIKeys/LetterGrid/LetterGrid.js\"\n\nfunction App() {\n  const [texts, setTexts]  = useState([]);\n  const [keyIndex, setKeyIndex] = useState(0)\n  const [keys, setItems] = useState([]);\n  const [score, setScore] = useState(0);\n  const [lang, setLang] = useState(\"python\");\n  const [time, setTimer] = useState(0);\n  const [speed, setSpeed] = useState(0);\n\n  useEffect(()=>{ \n    if (texts.length === 0) {\n      fetchText(lang)\n      fetchText(lang)\n      resetState()\n    }  \n  }, [texts, lang])\n\n  useEffect(()=>{ \n    setInterval(() => {\n      setTimer(t => t + 1);\n    }, 1000);  \n  }, [])\n\n  useEffect(()=>{ \n    const speedNow = Math.round(score/(time/60));\n    setSpeed(speedNow === Infinity ? 0 : speedNow);\n  }, [time, score])\n\n\n  useEffect(() => {\n    function downHandler({ key }) {\n      if (texts.length > 0 && texts[0].status === 200 && texts[0].data.message.length === keyIndex - 1) {\n        setTexts(texts.splice(1,texts.length))\n        fetchText(lang)\n        resetState()\n      }\n      if (keyIndex === 1) {\n        setTimer(0)\n      }\n\n      if (key === \"\"){\n        key = \" \"\n      } else if (key ==='Shift' || key === 'Meta') {\n        return;\n      }\n      addItem(key)\n      setKeyIndex(keyIndex => keyIndex + 1);\n      setScore(prevVal => prevVal + 1);\n  }\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n  }, [keys, keyIndex, resetState, lang, texts, setTexts]); \n\n  const addItem = (key) => {\n    setItems(items => [...items, key]);\n  };\n\n  const addText = (text) => {\n    console.log(text.data.message)\n    setTexts(texts => [...texts, text])\n  }\n\n  const fetchText = (lang) => {\n    console.log(`https://aikey.herokuapp.com/api/${lang}`)\n    const url = `https://aikey.herokuapp.com/api/${lang}`\n    axios.get(url).then(response => {\n      console.log(\"SUCCESS\", response)\n      addText(response)\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  function resetState(lang) {\n      setScore(0)\n      setItems([])\n      setTimer(0)\n      setSpeed(0)\n      setKeyIndex(0)\n  }\n\n  function switchLang(lang) {\n    setTexts([])\n    setLang(lang)\n  }\n\n  return (\n    <div className=\"App\">\n        <Dropdown onClickButton = {(l)=>switchLang(l)}></Dropdown>\n        <h2 className=\"wpm\">CPM: {speed}</h2>\n        <h2 className=\"wpm\">Time: {keyIndex === 0 ? 0 : time}</h2>\n        <LetterGrid \n          items={keys}\n          getMessage={texts[0]}\n          keyIndex={keyIndex}\n        ></LetterGrid>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}